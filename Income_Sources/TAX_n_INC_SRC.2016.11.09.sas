/* Section 1: Set Conditions */;
%LET TAX=//VBOXSVR/data/Viz/Tax_by_Income_Source/; LIBNAME TAX "&TAX.";

/* Section 2: Using ACS Data */;
%LET ACS12=//Vboxsvr/data/Census/ACS/2012/1YR/; LIBNAME ACS12 "&ACS12.";
%LET ACS14=//Vboxsvr/data/Census/ACS/2014/1YR/; LIBNAME ACS14 "&ACS14.";
DATA TAX.ACS12;
	RETAIN	ST SERIALNO SPORDER PWGTP
			RELP SFN
			AGEP SEX HISP MSP RAC1P
			INTP OIP PAP RETP SEMP SSIP SSP WAGP PINCP INCCAT;
	SET ACS12.P;
	KEEP	ST SERIALNO SPORDER PWGTP
			RELP SFN
			AGEP SEX HISP MSP RAC1P
			INTP OIP PAP RETP SEMP SSIP SSP WAGP PINCP INCCAT;
	IF PINCP IN(-999999:-1,.) THEN INCCAT = .;
		ELSE IF PINCP  = 000000 THEN INCCAT = 0;
		ELSE IF PINCP <= 009999 THEN INCCAT = 1;
		ELSE IF PINCP <= 024999 THEN INCCAT = 2;
		ELSE IF PINCP <= 049999 THEN INCCAT = 3;
		ELSE IF PINCP <= 074999 THEN INCCAT = 4;
		ELSE IF PINCP <= 099999 THEN INCCAT = 5;
		ELSE IF PINCP <= 199999 THEN INCCAT = 6;
		ELSE IF PINCP <= 499999 THEN INCCAT = 7;
		ELSE IF PINCP <= 999999 THEN INCCAT = 8;
		ELSE INCCAT = 9;
/*	WHERE AGEP IN(25:99);*/
RUN;

ODS HTML FILE="&TAX.ACS_INDIV.HTML"; TITLE "ACS INDIVIDUAL INCOME";
PROC SQL;
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	INCCAT,
	COUNT(PWGTP) FORMAT=COMMA18.0 AS FREQ,
	SUM(PWGTP) FORMAT=COMMA18.0 AS POP,
	SUM(INTP*PWGTP) FORMAT=COMMA18.0 AS INTP,
	SUM(OIP*PWGTP) FORMAT=COMMA18.0 AS OIP,
	SUM(PAP*PWGTP) FORMAT=COMMA18.0 AS PAP,
	SUM(RETP*PWGTP) FORMAT=COMMA18.0 AS RETP,
	SUM(SEMP*PWGTP) FORMAT=COMMA18.0 AS SEMP,
	SUM(SSIP*PWGTP) FORMAT=COMMA18.0 AS SSIP,
	SUM(SSP*PWGTP) FORMAT=COMMA18.0 AS SSP,
	SUM(WAGP*PWGTP) FORMAT=COMMA18.0 AS WAGP,
	SUM(PINCP*PWGTP) FORMAT=COMMA18.0 AS PINCP
	FROM TAX.ACS12
	GROUP BY INCCAT;
QUIT;
ODS HTML CLOSE; TITLE ;

DATA TAX.ACS12_2;
	RETAIN SUBID;
	SET TAX.ACS12;
	IF SFN = . & RELP NOTIN(10:15) THEN SUBID = 0;
		ELSE IF SFN NE . THEN SUBID = SFN;
		ELSE IF RELP IN(10:15) THEN SUBID = SUBID + 1;
RUN;

PROC SQL;
	CREATE TABLE TAX.ACS12_FAM AS
	SELECT ST, SERIALNO, SUBID,
	SUM(PWGTP) AS POP,
	SUM(INTP) AS INTP, SUM(OIP) AS OIP,
	SUM(PAP) AS PAP, SUM(RETP) AS RETP,
	SUM(SEMP) AS SEMP,
	SUM(SSIP) AS SSIP, SUM(SSP) AS SSP,
	SUM(WAGP) AS WAGP,
	SUM(PINCP) AS PINCP
	FROM TAX.ACS12_2
	GROUP BY ST, SERIALNO, SUBID;
QUIT;

DATA TAX.ACS12_FAM2;
	SET TAX.ACS12_FAM;
	IF PINCP IN(-999999:-1,.) THEN INCCAT = .;
		ELSE IF PINCP <= 000000 THEN INCCAT = 0;
		ELSE IF PINCP <= 009999 THEN INCCAT = 1;
		ELSE IF PINCP <= 024999 THEN INCCAT = 2;
		ELSE IF PINCP <= 049999 THEN INCCAT = 3;
		ELSE IF PINCP <= 074999 THEN INCCAT = 4;
		ELSE IF PINCP <= 099999 THEN INCCAT = 5;
		ELSE IF PINCP <= 199999 THEN INCCAT = 6;
		ELSE IF PINCP <= 499999 THEN INCCAT = 7;
		ELSE IF PINCP <= 999999 THEN INCCAT = 8;
		ELSE INCCAT = 9;
RUN;

ODS HTML FILE="&TAX.ACS_FAM.HTML"; TITLE "ACS FAMILY INCOME";
PROC SQL;
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	INCCAT,
	COUNT(POP) FORMAT=COMMA18.0 AS FREQ,
	SUM(POP) FORMAT=COMMA18.0 AS POP,
	SUM(INTP*POP) FORMAT=COMMA18.0 AS INTP,
	SUM(OIP*POP) FORMAT=COMMA18.0 AS OIP,
	SUM(PAP*POP) FORMAT=COMMA18.0 AS PAP,
	SUM(RETP*POP) FORMAT=COMMA18.0 AS RETP,
	SUM(SEMP*POP) FORMAT=COMMA18.0 AS SEMP,
	SUM(SSIP*POP) FORMAT=COMMA18.0 AS SSIP,
	SUM(SSP*POP) FORMAT=COMMA18.0 AS SSP,
	SUM(WAGP*POP) FORMAT=COMMA18.0 AS WAGP,
	SUM(PINCP*POP) FORMAT=COMMA18.0 AS PINCP
	FROM TAX.ACS12_FAM2
	GROUP BY INCCAT;
QUIT;
ODS HTML CLOSE; TITLE;

/* Section 3: Using CPS ASEC Data */;
%LET YY=13;
%LET CPS&YY.=//Vboxsvr/data/Census/CPS ASEC/20&YY./; LIBNAME CPS&YY. "&&CPS&YY..";
DATA TAX.ASEC&YY.;
	SET CPS&YY..ASEC&YY.;
	IF ERN_SRCE = 2 OR (ERN_SRCE IN(1,3,4) & SEOTR = 1) THEN ERN_VAL = ERN_VAL - SEMP_VAL;
	IF ERN_SRCE = 3 OR (ERN_SRCE IN(1,2,4) & FRMOTR = 1) THEN ERN_VAL = ERN_VAL - FRSE_VAL;
	IF PTOTVAL IN(-999999:-1,.) THEN INCCAT = .;
		ELSE IF PTOTVAL <= 000000 THEN INCCAT = 0;
		ELSE IF PTOTVAL <= 009999 THEN INCCAT = 1;
		ELSE IF PTOTVAL <= 024999 THEN INCCAT = 2;
		ELSE IF PTOTVAL <= 049999 THEN INCCAT = 3;
		ELSE IF PTOTVAL <= 074999 THEN INCCAT = 4;
		ELSE IF PTOTVAL <= 099999 THEN INCCAT = 5;
		ELSE IF PTOTVAL <= 199999 THEN INCCAT = 6;
		ELSE IF PTOTVAL <= 499999 THEN INCCAT = 7;
		ELSE IF PTOTVAL <= 999999 THEN INCCAT = 8;
		ELSE INCCAT = 9;
/*	COMBINC = SUM(OF ERN_VAL WS_VAL SEMP_VAL SE_VAL FRSE_VAL FRM_VAL UC_VAL WC_VAL SS_VAL SSI_VAL PAW_VAL VET_VAL SUR_VAL1 SUR_VAL2 DIS_VAL1 DIS_VAL2 RET_VAL1 RET_VAL2 INT_VAL DIV_VAL RNT_VAL ED_VAL CSP_VAL FIN_VAL OI_VAL);*/
/*	DIFF = PTOTVAL - COMBINC;*/
/*	IF DIFF NE 0;*/
	KEEP	H_SEQ HHPOS FH_SEQ PRECORD PH_SEQ FFPOS PPPOS PPPOSOLD A_LINENO
			ERN_VAL WS_VAL SEMP_VAL SE_VAL FRSE_VAL FRM_VAL UC_VAL WC_VAL SS_VAL SSI_VAL PAW_VAL VET_VAL SRVS_VAL DSAB_VAL RTM_VAL INT_VAL DIV_VAL RNT_VAL ED_VAL CSP_VAL FIN_VAL OI_OFF OI_VAL PTOTVAL PEARNVAL POTHVAL
			ERN_YN SEOTR ERN_SRCE FRMOTR
			MARSUPWT INCCAT
			;
/*	WHERE A_AGE IN(25:99);*/
RUN;

ODS HTML FILE="&TAX.CPS_INDIV.HTML"; TITLE "CPS INDIVIDUAL INCOME";
PROC SQL;
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	INCCAT,
	COUNT(MARSUPWT) FORMAT=COMMA18.0 AS FREQ,
	SUM(MARSUPWT) FORMAT=COMMA18.0 AS POP,
	SUM(ERN_VAL*MARSUPWT) + SUM(WS_VAL*MARSUPWT) FORMAT=COMMA18.0 AS WAGES,
	SUM(SEMP_VAL*MARSUPWT) + SUM(SE_VAL*MARSUPWT) FORMAT=COMMA18.0 AS SE_NOFARM,
	SUM(FRSE_VAL*MARSUPWT) + SUM(FRM_VAL*MARSUPWT) FORMAT=COMMA18.0 AS SE_FARM,
	SUM(SS_VAL*MARSUPWT) FORMAT=COMMA18.0 AS SOC_SEC,
	SUM(SSI_VAL*MARSUPWT) FORMAT=COMMA18.0 AS SSI,
	SUM(PAW_VAL*MARSUPWT) + SUM(ED_VAL*MARSUPWT) FORMAT=COMMA18.0 AS WELFARE,
	SUM(INT_VAL*MARSUPWT) FORMAT=COMMA18.0 AS INTEREST,
	SUM(DIV_VAL*MARSUPWT) + SUM(SRVS_VAL*MARSUPWT) + SUM(RNT_VAL*MARSUPWT) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(VET_VAL*MARSUPWT) + SUM(UC_VAL*MARSUPWT) + SUM(WC_VAL*MARSUPWT) + SUM(DSAB_VAL*MARSUPWT) FORMAT=COMMA18.0 AS VET_COMP_UNEMP,
	SUM(RTM_VAL*MARSUPWT) FORMAT=COMMA18.0 AS PENSION,
	SUM(CSP_VAL*MARSUPWT) FORMAT=COMMA18.0 AS ALIMONY,
	SUM(PTOTVAL*MARSUPWT) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.ASEC&YY.
	GROUP BY INCCAT;
QUIT;
ODS HTML CLOSE; TITLE;

%LET KEEPRETAIN=FH_SEQ FFPOS FPERSONS FSUP_WGT
FWSVAL FSEVAL FFRVAL FUCVAL FWCVAL FSSVAL FSSIVAL FPAWVAL FVETVAL FSURVAL FDISVAL FRETVAL FINTVAL FDIVVAL FRNTVAL FEDVAL FCSPVAL FFINVAL FOIVAL FOTHVAL
FTOTVAL;

DATA TAX.ASEC&YY._FAM;
	RETAIN &KEEPRETAIN.;
	SET CPS&YY..ASEC&YY.;
	KEEP &KEEPRETAIN. INCCAT;
	IF FTOTVAL IN(-999999:-1,.) THEN INCCAT = .;
		ELSE IF FTOTVAL  = 000000 THEN INCCAT = 0;
		ELSE IF FTOTVAL <= 009999 THEN INCCAT = 1;
		ELSE IF FTOTVAL <= 024999 THEN INCCAT = 2;
		ELSE IF FTOTVAL <= 049999 THEN INCCAT = 3;
		ELSE IF FTOTVAL <= 074999 THEN INCCAT = 4;
		ELSE IF FTOTVAL <= 099999 THEN INCCAT = 5;
		ELSE IF FTOTVAL <= 199999 THEN INCCAT = 6;
		ELSE IF FTOTVAL <= 499999 THEN INCCAT = 7;
		ELSE IF FTOTVAL <= 999999 THEN INCCAT = 8;
		ELSE INCCAT = 9;
	/* Not Included - FEARNVAL */
RUN;

PROC SQL;
	CREATE TABLE TAX.ASEC&YY._FAM2 AS
	SELECT
	FH_SEQ, FFPOS,
	MIN(FSUP_WGT) AS FSUP_WGT, MIN(INCCAT) AS INCCAT,
	MIN(FPERSONS) FORMAT=COMMA18.0 AS FPERSONS,
	MIN(FWSVAL) FORMAT=COMMA18.0 AS WAGES,
	MIN(FSEVAL) FORMAT=COMMA18.0 AS SE_NOFARM,
	MIN(FFRVAL) FORMAT=COMMA18.0 AS SE_FARM,
	MIN(FSSVAL) FORMAT=COMMA18.0 AS SOC_SEC,
	MIN(FSSIVAL) FORMAT=COMMA18.0 AS SSI,
	MIN(FPAWVAL) + MIN(FEDVAL) FORMAT=COMMA18.0 AS WELFARE,
	MIN(FINTVAL) FORMAT=COMMA18.0 AS INTEREST,
	MIN(FDIVVAL) + MIN(FSURVAL) + MIN(FRNTVAL) FORMAT=COMMA18.0 AS DIVIDEND,
	MIN(FVETVAL) + MIN(FUCVAL) + MIN(FWCVAL) + MIN(FDISVAL) FORMAT=COMMA18.0 AS VET_COMP_UNEMP,
	MIN(FRETVAL) FORMAT=COMMA18.0 AS PENSION,
	MIN(FCSPVAL) FORMAT=COMMA18.0 AS ALIMONY,
	MIN(FTOTVAL) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.ASEC&YY._FAM
	GROUP BY FH_SEQ, FFPOS;
QUIT;

ODS HTML FILE="&TAX.CPS_FAM.HTML"; TITLE "CPS FAMILY INCOME";
PROC SQL;
	SELECT
	INCCAT,
	COUNT(FPERSONS*FSUP_WGT) FORMAT=COMMA18.0 AS FREQ,
	SUM(FPERSONS*FSUP_WGT) FORMAT=COMMA18.0 AS POP,
	SUM(WAGES*FSUP_WGT) FORMAT=COMMA18.0 AS WAGES,
	SUM(SE_NOFARM*FSUP_WGT) FORMAT=COMMA18.0 AS SE_NOFARM,
	SUM(SE_FARM*FSUP_WGT) FORMAT=COMMA18.0 AS SE_FARM,
	SUM(SOC_SEC*FSUP_WGT) FORMAT=COMMA18.0 AS SOC_SEC,
	SUM(SSI*FSUP_WGT) FORMAT=COMMA18.0 AS SSI,
	SUM(WELFARE*FSUP_WGT) FORMAT=COMMA18.0 AS WELFARE,
	SUM(INTEREST*FSUP_WGT) FORMAT=COMMA18.0 AS INTEREST,
	SUM(DIVIDEND*FSUP_WGT) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(VET_COMP_UNEMP*FSUP_WGT) FORMAT=COMMA18.0 AS VET_COMP_UNEMP,
	SUM(PENSION*FSUP_WGT) FORMAT=COMMA18.0 AS PENSION,
	SUM(ALIMONY*FSUP_WGT) FORMAT=COMMA18.0 AS ALIMONY,
	SUM(TOTINC*FSUP_WGT) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.ASEC&YY._FAM2
	GROUP BY INCCAT;
QUIT;
ODS HTML CLOSE; TITLE;

/* Section 4 - Using SCF 2013 Data. */;
/* PART 1 */;
%LET SCF13=//Vboxsvr/data/SCF/2013/; LIBNAME SCF13 "&SCF13.";

%MACRO ACONV(F);
((&F=2)*52.18 + (&F=3)*26.09 + (&F=4)*12 + (&F=5)*4 + (&F=6) + (&F=8) + 
(&F=11)*2 + (&F=12)*6 + (&F=31)*24 + (&F=14) + (&F=22))
%MEND ACONV;

PROC SQL;
	CREATE TABLE TAX.SCF13 AS
	SELECT
	YY1, Y1, SUBSTR(PUT(Y1,5.),5,1) AS WAVE,
	X7001 AS PEUNUM, X101 AS HHNUM,
	X42001 AS WGT,
	X8000,
	X8021 AS SEX,
	X14 AS AGE, X19 AS SP_AGE,
	CASE WHEN X4104 IN(-1,1900:2013) THEN 1 ELSE 0 END AS DISAB,
	CASE WHEN X4704 IN(-1,1900:2013) THEN 1 ELSE 0 END AS SP_DISAB,
	MIN(SUM( (X108 = 4), (X114 = 4), (X120 = 4)+ (X126 = 4), (X132 = 4), (X202 = 4), (X208 = 4), (X214 = 4), (X220 = 4), (X226 = 4), 0), 2) AS CHILDREN,
	X5901 AS EDUC_GRADE, X5905 AS EDUC_DEGREE,
	CASE X5906 WHEN 1 THEN 1 WHEN 5 THEN 0 ELSE . END AS SERVEMIL,
	CASE X7004 WHEN 1 THEN 1 WHEN 5 THEN 0 ELSE . END AS HISPANIC,
	X6809 AS RACEID1, X6810 AS RACEID2,
	X7372 AS MARITAL,
	X8020 AS RELP_R, X108 AS RELP3, X114 AS RELP4, X120 AS RELP5, X126 AS RELP6, X132 AS RELP7, X202 AS RELP8, X208 AS RELP9, X214 AS RELP10, X220 AS RELP11, X226 AS RELP12,
	CASE X7020 WHEN 1 THEN 0 WHEN 2 THEN 1 ELSE . END AS SPOUSE_PRESENT,
	X5702 AS WAGES,
	X5704 AS SELF_INC,
	X5706 AS NONTAX_INVEST,
	X5708 AS OTHER_INTEREST,
	X5710 AS DIVIDEND,
	X5712 AS STOCKS,
	CASE	WHEN X7193 IN(0,-1) THEN 0
			WHEN X7193 = 25 THEN X3928/2
			WHEN X7193 IN(6,8) THEN X3928
			WHEN X7193 = 11 THEN X3928*2
			WHEN X7193 = 5 THEN X3928*4
			WHEN X7193 = 8 THEN X3928*6
			WHEN X7193 = 4 THEN X3928*12
			WHEN X7193 = 3 THEN X3928*26.25
			WHEN X7193 = 2 THEN X3928*52.50
			WHEN X7193 = 1 THEN X3928*365
			ELSE . END AS ANNUAL_ACTIVITY,
	X5714 AS RENT_TRUST,
	X5716 AS UNEMP_COMP,
	X5718 AS CHILD_SUP_ALIM,
	X5722 AS PENSIONS,
	X5720 AS TANF_SSI_FOODSTMP,
	X5724 AS OTHER_INC,

	X6558 + X6566 + X6574 + MAX(0,(X6464*%ACONV(X6465)))
		+ MAX(0,(X6469*%ACONV(X6470))) + MAX(0,(X6474*%ACONV(X6475)))
		+ MAX(0,(X6479*%ACONV(X6480))) + MAX(0,(X6965*%ACONV(X6966)))
		+ MAX(0,(X6971*%ACONV(X6972))) + MAX(0,(X6977*%ACONV(X6978)))
		+ MAX(0,(X6983*%ACONV(X6984))) AS PENACCTWD,
	X5729 + CALCULATED PENACCTWD - X5706 - X5720 AS TINCOME,
/*	X5744, X5746,*/

	CASE WHEN CALCULATED TINCOME = -1 THEN 0 ELSE CALCULATED TINCOME END AS AGI,

	X5702+X5704+X5706+X5708+X5710+X5712+X5714+X5716+X5718+X5720+X5722+X5724 AS CALCINC,
	CALCULATED CALCINC + CALCULATED PENACCTWD AS CALCINC2,
	X5712, X5729 AS TOTINC
	FROM SCF13.SCF2013
	WHERE CALCULATED WAVE = "1";
QUIT;

DATA TAX.SCF13_NW;
	SET SCF13.SCFP2013;
	WAVE = INPUT(SUBSTR(PUT(Y1,5.),5,1),BEST8.);
	IF WAVE = 1;
	IF YY1 = 3764 THEN DO;
		ASSET = ASSET + 2453000;
		NETWORTH = 0;
	END;
	DROP WAVE;
	KEEP YY1 NETWORTH ASSET DEBT;
RUN;

DATA TAX.SCF13B;
	MERGE TAX.SCF13 TAX.SCF13_NW;
	BY YY1;
	IF CALCINC2 IN(-999999:-2,.) THEN INCCAT = -1;
		ELSE IF CALCINC2 <= 00000000 THEN INCCAT =      -1;
		ELSE IF CALCINC2 <= 00009999 THEN INCCAT =       0;
		ELSE IF CALCINC2 <= 00019999 THEN INCCAT =   10000;
		ELSE IF CALCINC2 <= 00029999 THEN INCCAT =   20000;
		ELSE IF CALCINC2 <= 00039999 THEN INCCAT =   30000;
		ELSE IF CALCINC2 <= 00049999 THEN INCCAT =   40000;
		ELSE IF CALCINC2 <= 00074999 THEN INCCAT =   50000;
		ELSE IF CALCINC2 <= 00099999 THEN INCCAT =   75000;
		ELSE IF CALCINC2 <= 00249999 THEN INCCAT =  100000;
		ELSE IF CALCINC2 <= 00499999 THEN INCCAT =  250000;
		ELSE IF CALCINC2 <= 00999999 THEN INCCAT =  500000;
		ELSE IF CALCINC2 <= 01999999 THEN INCCAT = 1000000;
		ELSE IF CALCINC2 <= 04999999 THEN INCCAT = 2000000;
		ELSE IF CALCINC2 <= 09999999 THEN INCCAT = 5000000;
		ELSE INCCAT = 10000000;
	IF NETWORTH IN(-300000000:-2) THEN NWCAT = -1;
		ELSE IF NETWORTH IN(.,-1,0) THEN NWCAT = 0;
/*		ELSE IF NETWORTH < 100 THEN NWCAT = 2;*/
		ELSE IF NETWORTH < 1000 THEN NWCAT = 3;
		ELSE IF NETWORTH < 10000 THEN NWCAT = 4;
		ELSE IF NETWORTH < 100000 THEN NWCAT = 5;
		ELSE IF NETWORTH < 1000000 THEN NWCAT = 6;
		ELSE IF NETWORTH < 10000000 THEN NWCAT = 7;
		ELSE IF NETWORTH < 100000000 THEN NWCAT = 8;
		ELSE IF NETWORTH < 10000000000 THEN NWCAT = 9;

	AGICL=0;
	IF (AGI <= 0) THEN AGICL=-1;
		ELSE IF (0 < AGI < 5000) THEN AGICL=1;
		ELSE IF (5000 <= AGI < 10000) THEN AGICL=2;
		ELSE IF (10000 <= AGI < 15000) THEN AGICL=3;
		ELSE IF (15000 <= AGI < 20000) THEN AGICL=4;
		ELSE IF (20000 <= AGI < 25000) THEN AGICL=5;
		ELSE IF (25000 <= AGI < 30000) THEN AGICL=6;
		ELSE IF (30000 <= AGI < 35000) THEN AGICL=7;
		ELSE IF (35000 <= AGI < 40000) THEN AGICL=8;
		ELSE IF (40000 <= AGI < 45000) THEN AGICL=9;
		ELSE IF (45000 <= AGI < 50000) THEN AGICL=10;
		ELSE IF (50000 <= AGI < 55000) THEN AGICL=11;
		ELSE IF (55000 <= AGI < 60000) THEN AGICL=12;
		ELSE IF (60000 <= AGI < 75000) THEN AGICL=13;
		ELSE IF (75000 <= AGI < 100000) THEN AGICL=14;
		ELSE IF (100000 <= AGI < 200000) THEN AGICL=15;
		ELSE IF (200000 <= AGI < 500000) THEN AGICL=16;
		ELSE IF (500000 <= AGI < 1000000) THEN AGICL=17;
		ELSE IF (1000000 <= AGI < 1500000) THEN AGICL=18;
		ELSE IF (1500000 <= AGI < 2000000) THEN AGICL=19;
		ELSE IF (2000000 <= AGI < 5000000) THEN AGICL=20;
		ELSE IF (5000000 <= AGI < 10000000) THEN AGICL=21;
		ELSE IF (AGI >= 10000000) THEN AGICL=22;

	IF X5712=-1 THEN CAPGLINC=0;
		ELSE CAPGLINC=X5712;
	STCAPINC=0;
	LTCAPINC=0;

	IF (AGICL IN(-1 1 2 3 4 5 6 7 8 9 10)) THEN DO;
		IF (CAPGLINC > 0) THEN DO;
			LTCAPINC=CAPGLINC*.87;
			STCAPINC=CAPGLINC*.13;
			LTDIST=.87;
			STDIST=.13;
		END;
		ELSE IF (CAPGLINC < 0) THEN DO;
			LTCAPINC=CAPGLINC*.62;
			STCAPINC=CAPGLINC*.38;
			LTDIST=.62;
			STDIST=.38;
		END;
	END;
		ELSE IF (AGICL IN(11 12 13 14)) THEN DO;
			IF (CAPGLINC > 0) THEN DO;
				LTCAPINC=CAPGLINC*.86;
				STCAPINC=CAPGLINC*.14;
				LTDIST=.86;
				STDIST=.14;
			END;
			ELSE IF (CAPGLINC < 0) THEN DO;
				LTCAPINC=CAPGLINC*.66;
				STCAPINC=CAPGLINC*.34;
				LTDIST=.66;
				STDIST=.34;
			END;
		END;
		ELSE IF (AGICL IN(15 16 17 18 19 20 21 22)) THEN DO;
			IF (CAPGLINC > 0) THEN DO;
				LTCAPINC=CAPGLINC*.94;
				STCAPINC=CAPGLINC*.06;
				LTDIST=.94;
				STDIST=.06;
			END;
			ELSE IF (CAPGLINC < 0) THEN DO;
				LTCAPINC=CAPGLINC*.87;
				STCAPINC=CAPGLINC*.13;
				LTDIST=.87;
				STDIST=.13;
			END;
		END;

RUN;

LIBNAME TAXRATES PCFILES PATH="//Vboxsvr/data/IRS SOI/Tax/TAX_RATES.XLS" ACCESS=READONLY;
DATA _NULL_; * Deductions ;
	SET TAXRATES.'DEDUCT$'n(WHERE=(YEAR = 2012)) END=EOF;
	BY TAXSTAT BLIND65;
	IF _n_ = 1 THEN CALL EXECUTE("
		DATA TAX.SCF13_DEDUCT(KEEP=YY1 TAXSTAT BLIND65 CHILDREN DEDUCT);
			SET TAX.SCF13B;
			IF MARITAL IN(1,5) THEN TAXSTAT = 2;
				ELSE IF CHILDREN >= 1 THEN TAXSTAT = 4;
				ELSE TAXSTAT = 1;
			BLIND65 = SUM( (AGE IN(65:95)), (SP_AGE IN(65:95)), DISAB, SP_DISAB, 0);");
	CALL EXECUTE("
		IF "||COMPRESS(YEAR)||" = 2012 THEN DO;
			IF "||COMPRESS(TAXSTAT)||" = TAXSTAT & TAXSTAT IN(1,3,4) THEN DO;
				DEDUCT = "||COMPRESS(BASE)||" + ("||COMPRESS(EXEMPT)||"*(1 + CHILDREN)) + ("||COMPRESS(BLIND65)||"*BLIND65);
			END;
			IF "||COMPRESS(TAXSTAT)||" = TAXSTAT & TAXSTAT IN(2) THEN DO;
				DEDUCT = "||COMPRESS(BASE)||" + ("||COMPRESS(EXEMPT)||"*(2 + CHILDREN)) + ("||COMPRESS(BLIND65)||"*BLIND65);
			END;
		END;");
	IF EOF THEN CALL EXECUTE("RUN;");
RUN;

DATA TAX.SCF13C;
	MERGE TAX.SCF13B TAX.SCF13_DEDUCT;
	BY YY1;
RUN;

DATA _NULL_; * Wages, Self-Employment Income, Pensions, and Dividends ;
	SET TAXRATES.'EARNINGS$'n(WHERE=(YEAR = 2012)) END=EOF;
	BY TAXSTAT BRACKET;
	IF _n_ = 1 THEN CALL EXECUTE("
		DATA TAX.SCF13_EARN_TAX(KEEP=YY1 TAXSTAT BLIND65 CHILDREN DEDUCT
			WAGES SELF_INC DIVIDEND PENSIONS
			EARNINGS TAXEARN
			NOM_EARN_TAX NOM_DIV_TAX NOM_PENSION_TAX
			INC_MC_TAX SELF_MC_TAX INC_SS_TAX SELF_SS_TAX
			EARN_MC_SURTAX DIV_MC_SURTAX PENSION_MC_SURTAX ); * INCBRACKET: DIVBRACKET: ;
			SET TAX.SCF13C;
			CHILDREN = 0; IF RELP3 = 4 THEN CHILDREN + 1; IF RELP4 = 4 THEN CHILDREN + 1; IF RELP5 = 4 THEN CHILDREN + 1; IF RELP6 = 4 THEN CHILDREN + 1; IF RELP7 = 4 THEN CHILDREN + 1; IF RELP8 = 4 THEN CHILDREN + 1; IF RELP9 = 4 THEN CHILDREN + 1; IF RELP10 = 4 THEN CHILDREN + 1; IF RELP11 = 4 THEN CHILDREN + 1; IF RELP12 = 4 THEN CHILDREN + 1;
			IF MARITAL IN(1,5) THEN TAXSTAT = 2;
				ELSE IF CHILDREN >= 1 THEN TAXSTAT = 4;
				ELSE TAXSTAT = 1;
			ARRAY EARN_BRAC(*) EARNBRACKET1-EARNBRACKET"||COMPRESS(MAXBRACKET)||";
			ARRAY INC_BRAC(*) INCBRACKET1-INCBRACKET"||COMPRESS(MAXBRACKET)||";
			ARRAY SELF_BRAC(*) SELFBRACKET1-SELFBRACKET"||COMPRESS(MAXBRACKET)||";
			ARRAY DIV_BRAC(*) DIVBRACKET1-DIVBRACKET"||COMPRESS(MAXBRACKET)||";
			ARRAY PEN_BRAC(*) PENBRACKET1-PENBRACKET"||COMPRESS(MAXBRACKET)||";
			EARNINGS = SUM(WAGES, SELF_INC);
			TAXEARN = MAX(EARNINGS - DEDUCT, 0);");
	IF NOT LAST.TAXSTAT THEN CALL EXECUTE("
		IF TAXSTAT = "||COMPRESS(TAXSTAT)||" THEN DO;
			IF TAXEARN IN("||COMPRESS(LOW)||":"||COMPRESS(HIGH)||") THEN DO;
				EARN_BRAC("||COMPRESS(BRACKET)||") = (TAXEARN - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
				PEN_BRAC("||COMPRESS(BRACKET)||") = (PENSIONS - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
			END;
				ELSE IF TAXEARN GT "||COMPRESS(HIGH)||" THEN DO;
					EARN_BRAC("||COMPRESS(BRACKET)||") = ("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
					PEN_BRAC("||COMPRESS(BRACKET)||") = ("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
				END;
			IF "||COMPRESS(RATE)||" IN(.00,.10,.15) THEN DIV_RATE = 0.00;
				ELSE IF "||COMPRESS(RATE)||" IN(.25,.28,.33,.35) THEN DIV_RATE = 0.15;
				ELSE IF "||COMPRESS(RATE)||" IN(.396) THEN DIV_RATE = 0.20;
			IF DIVIDEND IN("||COMPRESS(LOW)||":"||COMPRESS(HIGH)||") THEN DIV_BRAC("||COMPRESS(BRACKET)||") = (DIVIDEND - "||COMPRESS(LOW)||")*DIV_RATE;
				ELSE IF DIVIDEND GT "||COMPRESS(HIGH)||" THEN DIV_BRAC("||COMPRESS(BRACKET)||") = ("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*DIV_RATE;
		END;");
	IF LAST.TAXSTAT THEN CALL EXECUTE("
		IF TAXSTAT = "||COMPRESS(TAXSTAT)||" THEN DO;
			IF TAXEARN GE "||COMPRESS(LOW)||" THEN DO;
				EARN_BRAC("||COMPRESS(BRACKET)||") = (TAXEARN - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
				PEN_BRAC("||COMPRESS(BRACKET)||") = (PENSIONS - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
			END;
			IF "||COMPRESS(RATE)||" IN(.00,.10,.15) THEN DIV_RATE = 0.00;
				ELSE IF "||COMPRESS(RATE)||" IN(.25,.28,.33,.35) THEN DIV_RATE = 0.15;
				ELSE IF "||COMPRESS(RATE)||" IN(.396) THEN DIV_RATE = 0.20;
			IF DIVIDEND GE "||COMPRESS(LOW)||" THEN DIV_BRAC("||COMPRESS(BRACKET)||") = (DIVIDEND - "||COMPRESS(LOW)||")*DIV_RATE;");
	/* MC Surtax for Dividend Income */
	IF LAST.TAXSTAT THEN CALL EXECUTE("
			IF ("||COMPRESS(YEAR)||" GE 2013) & (DIVIDEND GE "||COMPRESS(LOW)||")
				THEN DIV_MC_SURTAX = (DIVIDEND - "||COMPRESS(LOW)||")*0.009;
		END;");
	/* MC & SOCSEC Tax for Earned Income */
	IF LAST.TAXSTAT THEN CALL EXECUTE("
			INC_MC_TAX = WAGES*(.029/2);
			SELF_MC_TAX = SELF_INC*(.029);
			INC_SS_TAX = WAGES*(.124/2);
			SELF_SS_TAX = SELF_INC*(.124);");
	/* MC Surtax for Wages */
	IF EOF THEN CALL EXECUTE("
		IF "||COMPRESS(YEAR)||" GE 2013 THEN DO;
			IF TAXSTAT IN(1,4) THEN DO;
				IF TAXEARN GE 200000 THEN EARN_MC_SURTAX = (TAXEARN - 200000)*.009;
				IF PENSIONS GE 200000 THEN PENSION_MC_SURTAX = (PENSIONS - 200000)*.009;
			END;
			IF TAXSTAT IN(2) THEN DO;
				IF TAXEARN GE 250000 THEN EARN_MC_SURTAX = (TAXEARN - 250000)*.009;
				IF PENSIONS GE 250000 THEN PENSION_MC_SURTAX = (PENSIONS - 250000)*.009;
			END;
			IF TAXSTAT IN(3) THEN DO;
				IF TAXEARN GE 125000 THEN EARN_MC_SURTAX = (TAXEARN - 125000)*.009;
				IF PENSIONS GE 125000 THEN PENSION_MC_SURTAX = (PENSIONS - 125000)*.009;
			END;
		END;");
	/* Bring all of the parts together, form the tax variables, and end the data step. */
	IF EOF THEN CALL EXECUTE("
		FORMAT NOM_EARN_TAX NOM_DIV_TAX NOM_PENSION_TAX COMMA18.2;
		NOM_EARN_TAX = MAX( SUM( OF EARNBRACKET: EARN_MC_SURTAX INC_MC_TAX INC_SS_TAX SELF_MC_TAX SELF_SS_TAX),0);
		NOM_DIV_TAX = MAX( SUM( OF DIVBRACKET: DIV_MC_SURTAX ),0);
		NOM_PENSION_TAX = MAX( SUM( OF PENBRACKET: PENSION_MC_SURTAX ),0);
	RUN;");
RUN;

DATA _NULL_; * Stocks and Capital Gains ;
	SET TAXRATES.'CAP GAINS$'n(WHERE=(YEAR = 2012)) END=EOF;
	BY TAXSTAT BRACKET;
	IF _n_ = 1 THEN CALL EXECUTE("
		DATA TAX.SCF13_STOCK_TAX(KEEP=YY1 STOCKS ANNUAL_ACTIVITY TAXSTAT
			NOM_STOCK_TAX STOCK_MC_SURTAX ); * STOCKBRACKET:) ;
			SET TAX.SCF13C;
			CHILDREN = 0; IF RELP3 = 4 THEN CHILDREN + 1; IF RELP4 = 4 THEN CHILDREN + 1; IF RELP5 = 4 THEN CHILDREN + 1; IF RELP6 = 4 THEN CHILDREN + 1; IF RELP7 = 4 THEN CHILDREN + 1; IF RELP8 = 4 THEN CHILDREN + 1; IF RELP9 = 4 THEN CHILDREN + 1; IF RELP10 = 4 THEN CHILDREN + 1; IF RELP11 = 4 THEN CHILDREN + 1; IF RELP12 = 4 THEN CHILDREN + 1;
			IF MARITAL IN(1,5) THEN TAXSTAT = 2;
				ELSE IF CHILDREN >= 1 THEN TAXSTAT = 4;
				ELSE TAXSTAT = 1;
			ARRAY STOCK_BRAC(*) STOCKBRACKET1-STOCKBRACKET"||COMPRESS(MAXBRACKET)||";");
	/* Long-Term Capital Gains - No Activity */
	IF NOT LAST.TAXSTAT THEN CALL EXECUTE("
		IF TAXSTAT = "||COMPRESS(TAXSTAT)||" & ANNUAL_ACTIVITY = 0 THEN DO;
			IF ABS(STOCKS) IN("||COMPRESS(LOW)||":"||COMPRESS(HIGH)||") THEN STOCK_BRAC("||COMPRESS(BRACKET)||") = (ABS(STOCKS) - "||COMPRESS(LOW)||")*"||COMPRESS(LONGRATE)||";
				ELSE IF ABS(STOCKS) GT "||COMPRESS(HIGH)||" THEN STOCK_BRAC("||COMPRESS(BRACKET)||") = ("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*"||COMPRESS(LONGRATE)||";
		END;");
	IF LAST.TAXSTAT THEN CALL EXECUTE("
		IF TAXSTAT = "||COMPRESS(TAXSTAT)||" & ANNUAL_ACTIVITY = 0 THEN DO;
			IF ABS(STOCKS) GE "||COMPRESS(LOW)||" THEN STOCK_BRAC("||COMPRESS(BRACKET)||") = (ABS(STOCKS) - "||COMPRESS(LOW)||")*"||COMPRESS(LONGRATE)||";
		END;");

	/* Distributed Capital Gains Tax */
	IF NOT LAST.TAXSTAT THEN CALL EXECUTE("
		IF TAXSTAT = "||COMPRESS(TAXSTAT)||" & ANNUAL_ACTIVITY > 0 THEN DO;
			IF ABS(STOCKS) IN("||COMPRESS(LOW)||":"||COMPRESS(HIGH)||") THEN DO;
				STOCK_BRAC("||COMPRESS(BRACKET)||") = 
					(ABS(STOCKS) - "||COMPRESS(LOW)||")*"||COMPRESS(LONGRATE)||"*LTDIST +
					(ABS(STOCKS) - "||COMPRESS(LOW)||")*"||COMPRESS(SHORTRATE)||"*STDIST;
			END;
				ELSE IF ABS(STOCKS) GT "||COMPRESS(HIGH)||" THEN DO;
					STOCK_BRAC("||COMPRESS(BRACKET)||") =
						("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*"||COMPRESS(LONGRATE)||"*LTDIST +
						("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*"||COMPRESS(SHORTRATE)||"*STDIST;
				END;
		END;");
	IF LAST.TAXSTAT THEN CALL EXECUTE("
		IF TAXSTAT = "||COMPRESS(TAXSTAT)||" & ANNUAL_ACTIVITY > 0 THEN DO;
			IF ABS(STOCKS) GE "||COMPRESS(LOW)||" THEN DO;
				STOCK_BRAC("||COMPRESS(BRACKET)||") =
					(ABS(STOCKS) - "||COMPRESS(LOW)||")*"||COMPRESS(LONGRATE)||"*LTDIST +
					(ABS(STOCKS) - "||COMPRESS(LOW)||")*"||COMPRESS(SHORTRATE)||"*STDIST;
			END;
		END;");

	/* Surtax for Stocks */
	IF EOF THEN CALL EXECUTE("
		IF "||COMPRESS(YEAR)||" GE 2013 THEN DO;
			IF TAXSTAT IN(1,4) THEN DO;
				IF STOCKS GE 200000 THEN STOCK_MC_SURTAX = (STOCKS - 200000)*.038;
			END;
			IF TAXSTAT IN(2) THEN DO;
				IF STOCKS GE 250000 THEN STOCK_MC_SURTAX = (STOCKS - 250000)*.038;
			END;
			IF TAXSTAT IN(3) THEN DO;
				IF STOCKS GE 125000 THEN STOCK_MC_SURTAX = (STOCKS - 125000)*.038;
			END;
		END;");
	/* Bring all of the parts together, form the tax variables, and end the data step. */
	IF EOF THEN CALL EXECUTE("
		FORMAT NOM_STOCK_TAX COMMA18.2;
		NOM_STOCK_TAX = MAX( SUM( OF STOCKBRACKET: STOCK_MC_SURTAX ),0);
		IF STOCKS < 0 THEN NOM_STOCK_TAX = - NOM_STOCK_TAX;
	RUN;");
RUN;

DATA _NULL_; * Trusts, Estates, and Rental Income ;
	SET TAXRATES.'TRUSTS$'n(WHERE=(YEAR = 2012)) END=EOF;
	BY BRACKET;
	IF _n_ = 1 THEN CALL EXECUTE("
		DATA TAX.SCF13_TRUST_TAX(KEEP=YY1 RENT_TRUST NOM_TRUST_TAX TRUST_MC_SURTAX TRUST_TAX_RATE);
			SET TAX.SCF13C;
			ARRAY TRUST_BRAC(*) TRUSTBRACKET1-TRUSTBRACKET"||COMPRESS(MAXBRACKET)||";");
	IF NOT EOF THEN CALL EXECUTE("
		IF RENT_TRUST IN("||COMPRESS(LOW)||":"||COMPRESS(HIGH)||") THEN TRUST_BRAC("||COMPRESS(BRACKET)||") = (RENT_TRUST - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
			ELSE IF RENT_TRUST GT "||COMPRESS(HIGH)||" THEN TRUST_BRAC("||COMPRESS(BRACKET)||") = ("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
		");
	IF EOF THEN CALL EXECUTE("
		IF RENT_TRUST GE "||COMPRESS(LOW)||" THEN TRUST_BRAC("||COMPRESS(BRACKET)||") = (RENT_TRUST - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
		IF "||COMPRESS(YEAR)||" GE 2013 THEN DO;
			IF RENT_TRUST GE "||COMPRESS(LOW)||" THEN TRUST_MC_SURTAX = (RENT_TRUST - "||COMPRESS(LOW)||")*0.038;
		END;");
	/* Bring all of the parts together, form the tax variables, and end the data step. */
	IF EOF THEN CALL EXECUTE("
		FORMAT NOM_TRUST_TAX COMMA18.2 TRUST_TAX_RATE 6.4;

		NOM_TRUST_TAX = MAX( SUM( OF TRUSTBRACKET: TRUST_MC_SURTAX ),0);
		IF RENT_TRUST > 0 THEN TRUST_TAX_RATE = NOM_TRUST_TAX / RENT_TRUST;
		ELSE TRUST_TAX_RATE  = 0;

	RUN;");
RUN;
LIBNAME TAXRATES CLEAR;

DATA TAX.SCF13_TAXDATA;
	MERGE TAX.SCF13C TAX.SCF13_EARN_TAX TAX.SCF13_TRUST_TAX TAX.SCF13_STOCK_TAX;
	BY YY1;
		ABS_WAGES = ABS(WAGES);
		ABS_SELF_INC = ABS(SELF_INC);
		ABS_NONTAX_INVEST = ABS(NONTAX_INVEST);
		ABS_OTHER_INTEREST = ABS(OTHER_INTEREST);
		ABS_DIVIDEND = ABS(DIVIDEND);
		ABS_STOCKS = ABS(STOCKS);
		ABS_RENT_TRUST = ABS(RENT_TRUST);
		ABS_UNEMP_COMP = ABS(UNEMP_COMP);
		ABS_CHILD_SUP_ALIM = ABS(CHILD_SUP_ALIM);
		ABS_PENSIONS = ABS(PENSIONS);
		ABS_TANF_SSI_FOODSTMP = ABS(TANF_SSI_FOODSTMP);
		ABS_OTHER_INC = ABS(OTHER_INC);
		ABS_PENACCTWD = ABS(PENACCTWD);
		INC_ACTIVITY = SUM(OF ABS_:);
	IF INC_ACTIVITY IN(-999999:-2,.,1,0,-1) THEN INCACT_CAT =   -1;
		ELSE IF INC_ACTIVITY <= 00009999 THEN INCACT_CAT =       0;
		ELSE IF INC_ACTIVITY <= 00019999 THEN INCACT_CAT =   10000;
		ELSE IF INC_ACTIVITY <= 00029999 THEN INCACT_CAT =   20000;
		ELSE IF INC_ACTIVITY <= 00039999 THEN INCACT_CAT =   30000;
		ELSE IF INC_ACTIVITY <= 00049999 THEN INCACT_CAT =   40000;
		ELSE IF INC_ACTIVITY <= 00074999 THEN INCACT_CAT =   50000;
		ELSE IF INC_ACTIVITY <= 00099999 THEN INCACT_CAT =   75000;
		ELSE IF INC_ACTIVITY <= 00249999 THEN INCACT_CAT =  100000;
		ELSE IF INC_ACTIVITY <= 00499999 THEN INCACT_CAT =  250000;
		ELSE IF INC_ACTIVITY <= 00999999 THEN INCACT_CAT =  500000;
		ELSE IF INC_ACTIVITY <= 01999999 THEN INCACT_CAT = 1000000;
		ELSE IF INC_ACTIVITY <= 04999999 THEN INCACT_CAT = 2000000;
		ELSE IF INC_ACTIVITY <= 09999999 THEN INCACT_CAT = 5000000;
		ELSE INCACT_CAT = 10000000;
	IF ASSET IN(-300000000:-2) THEN ASSCAT = -1;
		ELSE IF ASSET IN(.,-1,0) THEN ASSCAT = 0;
/*		ELSE IF ASSET < 100 THEN ASSCAT = 2;*/
		ELSE IF ASSET < 1000 THEN ASSCAT = 3;
		ELSE IF ASSET < 10000 THEN ASSCAT = 4;
		ELSE IF ASSET < 100000 THEN ASSCAT = 5;
		ELSE IF ASSET < 1000000 THEN ASSCAT = 6;
		ELSE IF ASSET < 10000000 THEN ASSCAT = 7;
		ELSE IF ASSET < 100000000 THEN ASSCAT = 8;
		ELSE IF ASSET < 10000000000 THEN ASSCAT = 9;
RUN;

%MACRO INCTYPE(VARNAME);
PROC SQL;
	CREATE TABLE TAX.SCF13_&VARNAME.1 AS
	SELECT
	&VARNAME.,
	FREQ, POP,
	WAGES, GAINS, DIVIDEND, RENT_TRUST, RETIREMENT, ASSISTANCE, OTHER,
	WAGES+GAINS+DIVIDEND+RENT_TRUST+RETIREMENT+ASSISTANCE+OTHER FORMAT=COMMA25.0 AS TOTINC
	FROM (SELECT
			&VARNAME.,
			COUNT(WGT) FORMAT=COMMA25.0 AS FREQ,
			SUM(WGT) FORMAT=COMMA25.0 AS POP,
			SUM(WAGES*WGT) FORMAT=COMMA25.0 AS WAGES,
			SUM(RENT_TRUST*WGT) FORMAT=COMMA25.0 AS RENT_TRUST,
			SUM(STOCKS*WGT) FORMAT=COMMA25.0 AS GAINS,
			SUM(DIVIDEND*WGT) FORMAT=COMMA25.0 AS DIVIDEND,
			SUM(PENSIONS*WGT) FORMAT=COMMA25.0 AS RETIREMENT,
			SUM(TANF_SSI_FOODSTMP*WGT) FORMAT=COMMA25.0 AS ASSISTANCE,
			SUM(OTHER_INC*WGT) + SUM(SELF_INC*WGT) + SUM(UNEMP_COMP*WGT) + SUM(CHILD_SUP_ALIM*WGT) + SUM(NONTAX_INVEST*WGT) + SUM(OTHER_INTEREST*WGT)
				FORMAT=COMMA25.0 AS OTHER
		FROM TAX.SCF13_TAXDATA
		GROUP BY &VARNAME.);
QUIT;
PROC SQL;
	CREATE TABLE TAX.SCF13_&VARNAME.2 AS
	SELECT
	&VARNAME.,
	FREQ, POP,
	ABS_WAGES, ABS_GAINS, ABS_DIVIDEND, ABS_RENT_TRUST, ABS_RETIREMENT, ABS_ASSISTANCE, ABS_OTHER,
	ABS_WAGES+ABS_GAINS+ABS_DIVIDEND+ABS_RENT_TRUST+ABS_RETIREMENT+ABS_ASSISTANCE+ABS_OTHER FORMAT=COMMA25.0 AS ABSINC
	FROM (SELECT
			&VARNAME.,
			COUNT(WGT) FORMAT=COMMA25.0 AS FREQ,
			SUM(WGT) FORMAT=COMMA25.0 AS POP,
			SUM(ABS_WAGES*WGT) FORMAT=COMMA25.0 AS ABS_WAGES,
			SUM(ABS_RENT_TRUST*WGT) FORMAT=COMMA25.0 AS ABS_RENT_TRUST,
			SUM(ABS_STOCKS*WGT) FORMAT=COMMA25.0 AS ABS_GAINS,
			SUM(ABS_DIVIDEND*WGT) FORMAT=COMMA25.0 AS ABS_DIVIDEND,
			SUM(ABS_PENSIONS*WGT) FORMAT=COMMA25.0 AS ABS_RETIREMENT,
			SUM(ABS_TANF_SSI_FOODSTMP*WGT) FORMAT=COMMA25.0 AS ABS_ASSISTANCE,
			SUM(ABS_OTHER_INC*WGT) + SUM(ABS_SELF_INC*WGT) + SUM(ABS_UNEMP_COMP*WGT) + SUM(ABS_CHILD_SUP_ALIM*WGT) + SUM(ABS_NONTAX_INVEST*WGT) + SUM(ABS_OTHER_INTEREST*WGT)
				FORMAT=COMMA25.0 AS ABS_OTHER
		FROM TAX.SCF13_TAXDATA
		GROUP BY &VARNAME.);
QUIT;

PROC TRANSPOSE DATA=TAX.SCF13_&VARNAME.1 OUT=TAX.SCF13_&VARNAME.1B(RENAME=(_NAME_=INCTYPE COL1=VALUE &VARNAME.=CAT));
	BY &VARNAME. FREQ POP TOTINC;
RUN;

PROC TRANSPOSE DATA=TAX.SCF13_&VARNAME.2 OUT=TAX.SCF13_&VARNAME.2B(RENAME=(_NAME_=INCTYPE COL1=ABSVALUE &VARNAME.=CAT));
	BY &VARNAME. FREQ POP ABSINC;
RUN;

DATA TAX.SCF13_&VARNAME.3;
	MERGE	TAX.SCF13_&VARNAME.1B
			TAX.SCF13_&VARNAME.2B(DROP=INCTYPE);
RUN;

DATA TAX.SCF13_FINAL_&VARNAME.;
	RETAIN CATTYPE CAT FREQ POP INCTYPE VALUE TOTINC ABSVALUE ABSINC;
	FORMAT CATTYPE $10. PCT PCT2 9.6;
	SET TAX.SCF13_&VARNAME.3;
	CATTYPE = "&VARNAME.";
	PCT = VALUE / TOTINC;
	PCT2 = ABSVALUE / ABSINC;
RUN;
%MEND;
%INCTYPE(INCCAT);
%INCTYPE(INCACT_CAT);
%INCTYPE(NWCAT);
%INCTYPE(ASSCAT);

DATA TAX.TABLEAU;
	SET TAX.SCF13_FINAL:;
RUN;

PROC DATASETS LIB=TAX NOLIST;
	DELETE SCF13_:  SCF13B SCF13C;
RUN; QUIT;

DATA _NULL_;
	SET TAX.TABLEAU;
	FORMAT FREQ POP VALUE ABSVALUE TOTINC ABSINC 20.;
	FILE "&TAX.SCF13_INCOME_DISTRIBUTION.CSV" DSD DLM=",";
	IF _n_ = 1 THEN PUT "CATTYPE,CAT,FREQ,POP,INCTYPE,VALUE,ABSVALUE,TOTINC,ABSINC,PCT,PCT2";
	PUT CATTYPE CAT FREQ POP INCTYPE VALUE ABSVALUE TOTINC ABSINC PCT PCT2;
RUN;

/* SCF TAXCALC */;
PROC SQL;
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	INCCAT,
	COUNT(WGT) FORMAT=COMMA18.0 AS FREQ,
	SUM(WGT) FORMAT=COMMA18.0 AS POP,
	SUM(NOM_EARN_TAX*WGT) FORMAT=COMMA18.0 AS NOM_EARN_TAX,
/*	SUM(NOM_INC_TAX*WGT) FORMAT=COMMA18.0 AS NOM_INC_TAX,*/
/*	SUM(NOM_STOCK_TAX*WGT) FORMAT=COMMA18.0 AS NOM_STOCK_TAX,*/
	SUM(NOM_DIV_TAX*WGT) FORMAT=COMMA18.0 AS NOM_DIV_TAX,
	SUM(NOM_TRUST_TAX*WGT) FORMAT=COMMA18.0 AS NOM_TRUST_TAX,
/*	SUM(NOM_SELF_TAX*WGT) FORMAT=COMMA18.0 AS NOM_SELF_TAX,*/
/*	SUM(NOM_OTHERINT_TAX*WGT) FORMAT=COMMA18.0 AS NOM_OTHERINT_TAX,*/
/*	SUM(NOM_NOTAXINVEST_TAX*WGT) FORMAT=COMMA18.0 AS NOM_NOTAXINVEST_TAX,*/
/*	SUM(NOM_UECOMP_TAX*WGT) FORMAT=COMMA18.0 AS NOM_UECOMP_TAX,*/
/*	SUM(NOM_ALIM_TAX*WGT) FORMAT=COMMA18.0 AS NOM_ALIM_TAX,*/
	SUM(NOM_PENSION_TAX*WGT) FORMAT=COMMA18.0 AS NOM_PENSION_TAX,
/*	SUM(NOM_PUBLIC_TAX*WGT) FORMAT=COMMA18.0 AS NOM_PUBLIC_TAX,*/
/*	SUM(NOM_OTHERINC_TAX*WGT) FORMAT=COMMA18.0 AS NOM_OTHERINC_TAX,*/
/*	SUM(EARNINGS*WGT) FORMAT=COMMA18.0 AS EARNINGS,*/
	SUM(WAGES*WGT) FORMAT=COMMA18.0 AS WAGES,
	SUM(SELF_INC*WGT) FORMAT=COMMA18.0 AS SELF_INC,
	SUM(STOCKS*WGT) FORMAT=COMMA18.0 AS STOCKS,
	SUM(DIVIDEND*WGT) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(RENT_TRUST*WGT) FORMAT=COMMA18.0 AS RENT_TRUST,
/*	SUM(NONTAX_INVEST*WGT) FORMAT=COMMA18.0 AS NONTAX_INVEST,*/
/*	SUM(OTHER_INTEREST*WGT) FORMAT=COMMA18.0 AS OTHER_INTEREST,*/
/*	SUM(UNEMP_COMP*WGT) FORMAT=COMMA18.0 AS UNEMP_COMP,*/
/*	SUM(CHILD_SUP_ALIM*WGT) FORMAT=COMMA18.0 AS CHILD_SUP_ALIM,*/
	SUM(PENSIONS*WGT) FORMAT=COMMA18.0 AS PENSIONS,
/*	SUM(TANF_SSI_FOODSTMP*WGT) FORMAT=COMMA18.0 AS TANF_SSI_FOODSTMP,*/
/*	SUM(OTHER_INC*WGT) FORMAT=COMMA18.0 AS OTHER_INC,*/
	SUM(TOTINC*WGT) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.SCF13_TAXDATA
	GROUP BY INCCAT;
QUIT;

PROC SQL;
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	NWCAT,
	COUNT(WGT) FORMAT=COMMA18.0 AS FREQ,
	SUM(WGT) FORMAT=COMMA18.0 AS POP,
	SUM(NOM_EARN_TAX*WGT) FORMAT=COMMA18.0 AS NOM_EARN_TAX,
/*	SUM(NOM_INC_TAX*WGT) FORMAT=COMMA18.0 AS NOM_INC_TAX,*/
/*	SUM(NOM_STOCK_TAX*WGT) FORMAT=COMMA18.0 AS NOM_STOCK_TAX,*/
	SUM(NOM_DIV_TAX*WGT) FORMAT=COMMA18.0 AS NOM_DIV_TAX,
	SUM(NOM_TRUST_TAX*WGT) FORMAT=COMMA18.0 AS NOM_TRUST_TAX,
/*	SUM(NOM_SELF_TAX*WGT) FORMAT=COMMA18.0 AS NOM_SELF_TAX,*/
/*	SUM(NOM_OTHERINT_TAX*WGT) FORMAT=COMMA18.0 AS NOM_OTHERINT_TAX,*/
/*	SUM(NOM_NOTAXINVEST_TAX*WGT) FORMAT=COMMA18.0 AS NOM_NOTAXINVEST_TAX,*/
/*	SUM(NOM_UECOMP_TAX*WGT) FORMAT=COMMA18.0 AS NOM_UECOMP_TAX,*/
/*	SUM(NOM_ALIM_TAX*WGT) FORMAT=COMMA18.0 AS NOM_ALIM_TAX,*/
	SUM(NOM_PENSION_TAX*WGT) FORMAT=COMMA18.0 AS NOM_PENSION_TAX,
/*	SUM(NOM_PUBLIC_TAX*WGT) FORMAT=COMMA18.0 AS NOM_PUBLIC_TAX,*/
/*	SUM(NOM_OTHERINC_TAX*WGT) FORMAT=COMMA18.0 AS NOM_OTHERINC_TAX,*/
/*	SUM(EARNINGS*WGT) FORMAT=COMMA18.0 AS EARNINGS,*/
	SUM(WAGES*WGT) FORMAT=COMMA18.0 AS WAGES,
	SUM(SELF_INC*WGT) FORMAT=COMMA18.0 AS SELF_INC,
	SUM(STOCKS*WGT) FORMAT=COMMA18.0 AS STOCKS,
	SUM(DIVIDEND*WGT) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(RENT_TRUST*WGT) FORMAT=COMMA18.0 AS RENT_TRUST,
/*	SUM(NONTAX_INVEST*WGT) FORMAT=COMMA18.0 AS NONTAX_INVEST,*/
/*	SUM(OTHER_INTEREST*WGT) FORMAT=COMMA18.0 AS OTHER_INTEREST,*/
/*	SUM(UNEMP_COMP*WGT) FORMAT=COMMA18.0 AS UNEMP_COMP,*/
/*	SUM(CHILD_SUP_ALIM*WGT) FORMAT=COMMA18.0 AS CHILD_SUP_ALIM,*/
	SUM(PENSIONS*WGT) FORMAT=COMMA18.0 AS PENSIONS,
/*	SUM(TANF_SSI_FOODSTMP*WGT) FORMAT=COMMA18.0 AS TANF_SSI_FOODSTMP,*/
/*	SUM(OTHER_INC*WGT) FORMAT=COMMA18.0 AS OTHER_INC,*/
	SUM(TOTINC*WGT) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.SCF13_TAXDATA
	GROUP BY NWCAT;
QUIT;

ODS HTML FILE="&TAX.SCF13_FAM.HTML"; TITLE "SCF FAMILY INCOME";
PROC SQL;
	TITLE "INCOME DISTRIBUTION BY INCOME CATEGORY";
/*	CREATE TABLE TAX.INCCAT_DIST AS*/
	SELECT
	INCCAT,
	COUNT(WGT) FORMAT=COMMA18.0 AS FREQ,
	SUM(WGT) FORMAT=COMMA18.0 AS POP,
	SUM(WAGES*WGT) FORMAT=COMMA18.0 AS WAGES,
	SUM(SELF_INC*WGT) FORMAT=COMMA18.0 AS SELF_INC,
	SUM(STOCKS*WGT) FORMAT=COMMA18.0 AS STOCKS,
	SUM(DIVIDEND*WGT) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(RENT_TRUST*WGT) FORMAT=COMMA18.0 AS RENT_TRUST,
	SUM(NONTAX_INVEST*WGT) FORMAT=COMMA18.0 AS NONTAX_INVEST,
	SUM(OTHER_INTEREST*WGT) FORMAT=COMMA18.0 AS OTHER_INTEREST,
	SUM(UNEMP_COMP*WGT) FORMAT=COMMA18.0 AS UNEMP_COMP,
	SUM(CHILD_SUP_ALIM*WGT) FORMAT=COMMA18.0 AS CHILD_SUP_ALIM,
	SUM(PENSIONS*WGT) FORMAT=COMMA18.0 AS PENSIONS,
	SUM(TANF_SSI_FOODSTMP*WGT) FORMAT=COMMA18.0 AS TANF_SSI_FOODSTMP,
	SUM(OTHER_INC*WGT) FORMAT=COMMA18.0 AS OTHER_INC,
	SUM(TOTINC*WGT) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.SCF13_TAXDATA
	GROUP BY INCCAT;
QUIT; TITLE;

PROC SQL;
	TITLE "INCOME DISTRIBUTION BY INCOME ACTIVITY";
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	INCACT_CAT,
	COUNT(WGT) FORMAT=COMMA18.0 AS FREQ,
	SUM(WGT) FORMAT=COMMA18.0 AS POP,
	SUM(WAGES*WGT) FORMAT=COMMA18.0 AS WAGES,
	SUM(SELF_INC*WGT) FORMAT=COMMA18.0 AS SELF_INC,
	SUM(STOCKS*WGT) FORMAT=COMMA18.0 AS STOCKS,
	SUM(DIVIDEND*WGT) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(RENT_TRUST*WGT) FORMAT=COMMA18.0 AS RENT_TRUST,
	SUM(NONTAX_INVEST*WGT) FORMAT=COMMA18.0 AS NONTAX_INVEST,
	SUM(OTHER_INTEREST*WGT) FORMAT=COMMA18.0 AS OTHER_INTEREST,
	SUM(UNEMP_COMP*WGT) FORMAT=COMMA18.0 AS UNEMP_COMP,
	SUM(CHILD_SUP_ALIM*WGT) FORMAT=COMMA18.0 AS CHILD_SUP_ALIM,
	SUM(PENSIONS*WGT) FORMAT=COMMA18.0 AS PENSIONS,
	SUM(TANF_SSI_FOODSTMP*WGT) FORMAT=COMMA18.0 AS TANF_SSI_FOODSTMP,
	SUM(OTHER_INC*WGT) FORMAT=COMMA18.0 AS OTHER_INC,
	SUM(TOTINC*WGT) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.SCF13_TAXDATA
	GROUP BY INCACT_CAT;
QUIT; TITLE;

PROC SQL;
	TITLE "INCOME DISTRIBUTION BY NET WORTH";
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	NWCAT,
	COUNT(WGT) FORMAT=COMMA18.0 AS FREQ,
	SUM(WGT) FORMAT=COMMA18.0 AS POP,
	SUM(WAGES*WGT) FORMAT=COMMA18.0 AS WAGES,
	SUM(SELF_INC*WGT) FORMAT=COMMA18.0 AS SELF_INC,
	SUM(STOCKS*WGT) FORMAT=COMMA18.0 AS STOCKS,
	SUM(DIVIDEND*WGT) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(RENT_TRUST*WGT) FORMAT=COMMA18.0 AS RENT_TRUST,
	SUM(NONTAX_INVEST*WGT) FORMAT=COMMA18.0 AS NONTAX_INVEST,
	SUM(OTHER_INTEREST*WGT) FORMAT=COMMA18.0 AS OTHER_INTEREST,
	SUM(UNEMP_COMP*WGT) FORMAT=COMMA18.0 AS UNEMP_COMP,
	SUM(CHILD_SUP_ALIM*WGT) FORMAT=COMMA18.0 AS CHILD_SUP_ALIM,
	SUM(PENSIONS*WGT) FORMAT=COMMA18.0 AS PENSIONS,
	SUM(TANF_SSI_FOODSTMP*WGT) FORMAT=COMMA18.0 AS TANF_SSI_FOODSTMP,
	SUM(OTHER_INC*WGT) FORMAT=COMMA18.0 AS OTHER_INC,
	SUM(TOTINC*WGT) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.SCF13_TAXDATA
	GROUP BY NWCAT;
QUIT; TITLE;

PROC SQL;
	TITLE "INCOME DISTRIBUTION BY ASSETS";
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	ASSCAT,
	COUNT(WGT) FORMAT=COMMA18.0 AS FREQ,
	SUM(WGT) FORMAT=COMMA18.0 AS POP,
	SUM(WAGES*WGT) FORMAT=COMMA18.0 AS WAGES,
	SUM(SELF_INC*WGT) FORMAT=COMMA18.0 AS SELF_INC,
	SUM(STOCKS*WGT) FORMAT=COMMA18.0 AS STOCKS,
	SUM(DIVIDEND*WGT) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(RENT_TRUST*WGT) FORMAT=COMMA18.0 AS RENT_TRUST,
	SUM(NONTAX_INVEST*WGT) FORMAT=COMMA18.0 AS NONTAX_INVEST,
	SUM(OTHER_INTEREST*WGT) FORMAT=COMMA18.0 AS OTHER_INTEREST,
	SUM(UNEMP_COMP*WGT) FORMAT=COMMA18.0 AS UNEMP_COMP,
	SUM(CHILD_SUP_ALIM*WGT) FORMAT=COMMA18.0 AS CHILD_SUP_ALIM,
	SUM(PENSIONS*WGT) FORMAT=COMMA18.0 AS PENSIONS,
	SUM(TANF_SSI_FOODSTMP*WGT) FORMAT=COMMA18.0 AS TANF_SSI_FOODSTMP,
	SUM(OTHER_INC*WGT) FORMAT=COMMA18.0 AS OTHER_INC,
	SUM(TOTINC*WGT) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.SCF13_TAXDATA
	GROUP BY ASSCAT;
QUIT; TITLE;
ODS HTML CLOSE; TITLE ;

/* PART 2 */;

PROC MEANS DATA=TAX.SCF13_SUMMARY MEAN STDERR MIN P1 P5 P10 P25 P50 P75 P90 P95 P99 MAX;
	VAR INCOME NETWORTH;
	WEIGHT WGT;
RUN;

PROC FREQ DATA=TAX.SCF13B;
	TABLES ANNUAL_ACTIVITY;
RUN;
PROC FREQ DATA=SCF13.SCF2013;
	TABLES X7193;
RUN;

LIBNAME XL_SCF13 PCFILES PATH="&SCF13.ASD.xlsx";
DATA XL_SCF13.'SUM_SCF13'n;
	SET TAX.SCF13_SUMMARY;
	DROP BSHOPNONE--BOTHER ICALL--IFINPLAN CKLOCATION--CKOTHCHOOSE PAYMORT1--PAYPEN6;
RUN;
LIBNAME XL_SCF13 CLEAR;

/* IRS SOI */;
LIBNAME TABLE1_4 PCFILES PATH="&TAX.TAB_1.4.XLSX" ACCESS=READONLY;
DATA TAX.IRS_SOI_TAB14;
	SET TABLE1_4.'TAB14$'n;
RUN;
DATA TAX.TAB14_ITEMS;
	SET TABLE1_4.'ITEMS$'n;
RUN;
LIBNAME TABLE1_4 CLEAR;

DATA TAX.IRS_SOI_TAB14_2;
	SET TAX.IRS_SOI_TAB14;
	ARRAY ITEM(*) I_003-I_136;
	DO i = 1 TO DIM(ITEM) BY 2;
		ITEM(i) = .;
	END;
	DROP i ;
RUN;

PROC TRANSPOSE DATA=TAX.IRS_SOI_TAB14_2 OUT=TAX.IRS_SOI_TAB14_3(WHERE=(COL1 NE .) DROP=_LABEL_);
	BY LOW LABEL;
RUN;

DATA TAX.IRS_SOI_TAB14_4;
	SET TAX.IRS_SOI_TAB14_3(RENAME=(COL1 = VALUE LABEL=LOW_LABEL));
	ITEM = INPUT(SUBSTR(_NAME_,3,3),3.);
	DROP _NAME_;
RUN;

DATA _NULL_;
	SET TAX.TAB14_ITEMS END=EOF;
	IF _n_ = 1 THEN CALL EXECUTE("
		DATA TAX.IRS_SOI_TAB14_5(WHERE=(ITEM1040 NE """" OR ITEM = 1));
			SET TAX.IRS_SOI_TAB14_4;
			FORMAT ITEM_LABEL $100. ITEM1040 $3.;
	");
	CALL EXECUTE("
			IF ITEM = "||COMPRESS(ITEMNO)||" THEN DO;
				ITEM_LABEL = """||TRIM(LABEL)||""";
				ITEM1040 = """||COMPRESS(ITEM1040)||""";
				IRS_CONTRIB = "||ORIG||";
				INC_CONTRIB = "||NEW||";
			END;
	");
	IF EOF THEN CALL EXECUTE("RUN;");
RUN;

DATA TAX.IRS_SOI_TAB14_6;
	SET TAX.IRS_SOI_TAB14_5;
	FORMAT INCTYPE $20. LOW2_LABEL $20.;
	IF ITEM IN(6) THEN INCTYPE = "WAGES";
		ELSE IF ITEM IN(1) THEN INCTYPE = "TAX_RETURNS";
		ELSE IF ITEM IN(52,56,60) THEN INCTYPE = "POS_RENT_TRUST";
		ELSE IF ITEM IN(54,58,62) THEN INCTYPE = "NEG_RENT_TRUST";
		ELSE IF ITEM IN(24,26) THEN INCTYPE = "POS_GAINS";
		ELSE IF ITEM IN(28) THEN INCTYPE = "NEG_GAINS";
		ELSE IF ITEM IN(36,70) THEN INCTYPE = "RETIREMENT";
		ELSE IF ITEM IN(12) THEN INCTYPE = "DIVIDEND";
		ELSE IF ITEM IN(0) THEN INCTYPE = "ASSISTANCE";
		ELSE IF ITEM IN(8,10,16,18,20,22,64,66,68,74,76,78,80,82,84,86) THEN INCTYPE = "OTHER_INC";

	IF INCTYPE = "OTHER_INC" & INC_CONTRIB = 1 THEN INCTYPE = "POS_OTHER";
		ELSE IF INCTYPE = "OTHER_INC" & INC_CONTRIB = -1 THEN INCTYPE = "NEG_OTHER";
	IF INCTYPE NE "";
	NEWVAL = VALUE*INC_CONTRIB;

	*NEW INCOME RANGES;
	IF LOW = -1 THEN DO;
		LOW2 = -1; LOW2_LABEL = "0 or Less";
	END;
	IF LOW IN(1,5000) THEN DO;
		LOW2 = 1; LOW2_LABEL = "1 to <10K";
	END;
	IF LOW IN(10000,15000) THEN DO;
		LOW2 = 10000; LOW2_LABEL = "10K to <20K";
	END;
	IF LOW IN(20000,25000) THEN DO;
		LOW2 = 20000; LOW2_LABEL = "20K to <30K";
	END;
	IF LOW IN(30000) THEN DO;
		LOW2 = 30000; LOW2_LABEL = "30K to <40K";
	END;
	IF LOW IN(40000) THEN DO;
		LOW2 = 40000; LOW2_LABEL = "40K to <50K";
	END;
	IF LOW IN(50000) THEN DO;
		LOW2 = 50000; LOW2_LABEL = "50K to <75K";
	END;
	IF LOW IN(75000) THEN DO;
		LOW2 = 75000; LOW2_LABEL = "75K to <100K";
	END;
	IF LOW IN(100000,200000) THEN DO;
		LOW2 = 100000; LOW2_LABEL = "100K to <250K";
	END;
	IF LOW IN(250000) THEN DO;
		LOW2 = 250000; LOW2_LABEL = "250K to <500K";
	END;
	IF LOW IN(500000) THEN DO;
		LOW2 = 500000; LOW2_LABEL = "500K to <1M";
	END;
	IF LOW IN(1000000,1500000) THEN DO;
		LOW2 = 1000000; LOW2_LABEL = "1M to <2M";
	END;
	IF LOW IN(2000000) THEN DO;
		LOW2 = 2000000; LOW2_LABEL = "2M to <5M";
	END;
	IF LOW IN(5000000) THEN DO;
		LOW2 = 5000000; LOW2_LABEL = "5M to <10M";
	END;
	IF LOW IN(10000000) THEN DO;
		LOW2 = 10000000; LOW2_LABEL = "10M and Up";
	END;
RUN;

PROC SQL;
	CREATE TABLE TAX.IRS_TABLEAU AS
	SELECT
		A.LOW, A.LABEL, A.INCTYPE, B.RETURNS, A.VALUE,
		B.TOTINC, B.POSINC
	FROM (
		SELECT
			LOW2 AS LOW,
			MIN(LOW2_LABEL) AS LABEL,
			INCTYPE,
			SUM(NEWVAL) AS VALUE
		FROM TAX.IRS_SOI_TAB14_6(WHERE=(ITEM NE 1))
		GROUP BY LOW2, INCTYPE) AS A
	INNER JOIN (
		SELECT
			A.LOW, B.RETURNS, A.TOTINC, A.POSINC
		FROM
			(SELECT
				LOW2 AS LOW,
				SUM(NEWVAL) AS TOTINC,
				SUM(MAX(NEWVAL,0)) AS POSINC
			FROM TAX.IRS_SOI_TAB14_6(WHERE=(ITEM NE 1))
			GROUP BY LOW2) AS A
		INNER JOIN
			(SELECT
				LOW2 AS LOW,
				SUM(DISTINCT VALUE) AS RETURNS
			FROM TAX.IRS_SOI_TAB14_6(WHERE=(ITEM = 1))
			GROUP BY LOW2) AS B
		ON A.LOW = B.LOW) AS B
	ON A.LOW = B.LOW;
QUIT;

PROC DATASETS LIB=TAX NOLIST;
	DELETE IRS_SOI_:;
RUN; QUIT;

DATA _NULL_;
	SET TAX.IRS_TABLEAU;
	FORMAT VALUE TOTINC POSINC 20.;
	FILE "&TAX.IRS2012_INCOME_DISTRIBUTION.CSV" DSD DLM=",";
	IF _n_ = 1 THEN PUT "LOW,LABEL,INCTYPE,RETURNS,VALUE,TOTINC,POSINC";
	PUT LOW LABEL INCTYPE RETURNS VALUE TOTINC POSINC;
RUN;

/* Unused */;
%MACRO UNUSED;
PROC FREQ DATA=TAX.CHECK;
	TABLES INCCAT / NOCUM ;
RUN;

PROC REG DATA=TAX.CPS15;
	MODEL PTOTVAL = ERN_VAL WS_VAL SEMP_VAL SE_VAL FRSE_VAL FRM_VAL UC_VAL WC_VAL SS_VAL SSI_VAL PAW_VAL VET_VAL SUR_VAL1 SUR_VAL2 DIS_VAL1 DIS_VAL2 RET_VAL1 RET_VAL2 INT_VAL DIV_VAL RNT_VAL ED_VAL CSP_VAL FIN_VAL OI_VAL;
RUN;
QUIT;

DATA TAX.CHECK;
	SET TAX.CPS15;
	IF ERN_SRCE = 2 OR (ERN_SRCE IN(1,3,4) & SEOTR = 1) THEN ERN_VAL = ERN_VAL - SEMP_VAL;
	IF ERN_SRCE = 3 OR (ERN_SRCE IN(1,2,4) & FRMOTR = 1) THEN ERN_VAL = ERN_VAL - FRSE_VAL;
	COMBINC = SUM(OF ERN_VAL WS_VAL SEMP_VAL SE_VAL FRSE_VAL FRM_VAL UC_VAL WC_VAL SS_VAL SSI_VAL PAW_VAL VET_VAL SRVS_VAL DSAB_VAL RTM_VAL INT_VAL DIV_VAL RNT_VAL ED_VAL CSP_VAL FIN_VAL OI_VAL);
	DIFF = PTOTVAL - COMBINC;
	IF DIFF NE 0;
RUN;

PROC SQL;
	CREATE TABLE TAX.ASEC15_FAM AS
	SELECT
	FH_SEQ, FFPOS,
	SUM(MARSUPWT) FORMAT=COMMA18.0 AS POP,
	SUM(ERN_VAL) + SUM(WS_VAL) FORMAT=COMMA18.0 AS WAGES,
	SUM(SEMP_VAL) + SUM(SE_VAL) FORMAT=COMMA18.0 AS SE_NOFARM,
	SUM(FRSE_VAL) + SUM(FRM_VAL) FORMAT=COMMA18.0 AS SE_FARM,
	SUM(SS_VAL) FORMAT=COMMA18.0 AS SOC_SEC,
	SUM(SSI_VAL) FORMAT=COMMA18.0 AS SSI,
	SUM(PAW_VAL) + SUM(ED_VAL) FORMAT=COMMA18.0 AS WELFARE,
	SUM(INT_VAL) FORMAT=COMMA18.0 AS INTEREST,
	SUM(DIV_VAL) + SUM(SRVS_VAL) + SUM(RNT_VAL) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(VET_VAL) + SUM(UC_VAL) + SUM(WC_VAL) + SUM(DSAB_VAL) FORMAT=COMMA18.0 AS VET_COMP_UNEMP,
	SUM(RTM_VAL) FORMAT=COMMA18.0 AS PENSION,
	SUM(CSP_VAL) FORMAT=COMMA18.0 AS ALIMONY,
	SUM(PTOTVAL) FORMAT=COMMA18.0 AS TOTINC

	FROM TAX.ASEC15
	GROUP BY FH_SEQ, FFPOS;
QUIT;

DATA TAX.ASEC15_FAM2;
	SET TAX.ASEC15_FAM;
	IF TOTINC IN(-999999:0,.) THEN INCCAT = 0;
		ELSE IF TOTINC <= 009999 THEN INCCAT = 1;
		ELSE IF TOTINC <= 024999 THEN INCCAT = 2;
		ELSE IF TOTINC <= 049999 THEN INCCAT = 3;
		ELSE IF TOTINC <= 074999 THEN INCCAT = 4;
		ELSE IF TOTINC <= 099999 THEN INCCAT = 5;
		ELSE IF TOTINC <= 199999 THEN INCCAT = 6;
		ELSE IF TOTINC <= 499999 THEN INCCAT = 7;
		ELSE IF TOTINC <= 999999 THEN INCCAT = 8;
		ELSE INCCAT = 9;
RUN;

ODS HTML FILE="&TAX.CPS_FAM.HTML";
TITLE "CPS FAMILY INCOME";
PROC SQL;
/*	CREATE TABLE TAX.INCDIST AS*/
	SELECT
	INCCAT,
	COUNT(POP) FORMAT=COMMA18.0 AS FREQ,
	SUM(POP) FORMAT=COMMA18.0 AS POP,
	SUM(WAGES*POP) FORMAT=COMMA18.0 AS WAGES,
	SUM(SE_NOFARM*POP) FORMAT=COMMA18.0 AS SE_NOFARM,
	SUM(SE_FARM*POP) FORMAT=COMMA18.0 AS SE_FARM,
	SUM(SOC_SEC*POP) FORMAT=COMMA18.0 AS SOC_SEC,
	SUM(SSI*POP) FORMAT=COMMA18.0 AS SSI,
	SUM(WELFARE*POP) FORMAT=COMMA18.0 AS WELFARE,
	SUM(INTEREST*POP) FORMAT=COMMA18.0 AS INTEREST,
	SUM(DIVIDEND*POP) FORMAT=COMMA18.0 AS DIVIDEND,
	SUM(VET_COMP_UNEMP*POP) FORMAT=COMMA18.0 AS VET_COMP_UNEMP,
	SUM(PENSION*POP) FORMAT=COMMA18.0 AS PENSION,
	SUM(ALIMONY*POP) FORMAT=COMMA18.0 AS ALIMONY,
	SUM(TOTINC*POP) FORMAT=COMMA18.0 AS TOTINC
	FROM TAX.ASEC15_FAM2
	GROUP BY INCCAT;
QUIT;
TITLE;
ODS HTML CLOSE;

%MEND;

DATA _NULL_; * Deductions - Alternate ;
	SET TAXRATES.'DEDUCT2$'n(WHERE=(YEAR = 2012)) END=EOF;
	BY TAXSTAT BLIND65;
	IF _n_ = 1 THEN CALL EXECUTE("
		DATA TAX.SCF13_DEDUCT2(KEEP=YY1 TAXSTAT BLIND65 DEDUCT);
			SET TAX.SCF13B;
			IF MARITAL IN(1,5) THEN TAXSTAT = 2;
				ELSE IF CHILDREN >= 1 THEN TAXSTAT = 4;
				ELSE TAXSTAT = 1;
			BLIND65 = SUM( (AGE IN(65:95)), (SP_AGE IN(65:95)), DISAB, SP_DISAB, 0);");
	CALL EXECUTE("
		IF "||YEAR||" = 2012 THEN DO;
			IF "||TAXSTAT||" = TAXSTAT & "||BLIND65||" = BLIND65 THEN DEDUCT = "||DEDUCT||";
		END;");
	IF EOF THEN CALL EXECUTE("
	RUN;");
RUN;

DATA _NULL_; * Wages, Self-Employment Income, Pensions, and Dividends - Alternate ;
	SET TAXRATES.'EARNINGS$'n(WHERE=(YEAR = 2012)) END=EOF;
	BY TAXSTAT BRACKET;
	IF _n_ = 1 THEN CALL EXECUTE("
		DATA TAX.SCF13_NOM_TAX(KEEP=YY1 TAXSTAT
			WAGES DIVIDEND PENSIONS
			NOM_INC_TAX NOM_DIV_TAX NOM_PENSION_TAX
			WAGE_MC_SURTAX DIV_MC_SURTAX PENSION_MC_SURTAX ); * INCBRACKET: DIVBRACKET: ;
			SET TAX.SCF13C;
			CHILDREN = 0; IF RELP3 = 4 THEN CHILDREN + 1; IF RELP4 = 4 THEN CHILDREN + 1; IF RELP5 = 4 THEN CHILDREN + 1; IF RELP6 = 4 THEN CHILDREN + 1; IF RELP7 = 4 THEN CHILDREN + 1; IF RELP8 = 4 THEN CHILDREN + 1; IF RELP9 = 4 THEN CHILDREN + 1; IF RELP10 = 4 THEN CHILDREN + 1; IF RELP11 = 4 THEN CHILDREN + 1; IF RELP12 = 4 THEN CHILDREN + 1;
			IF MARITAL IN(1,5) THEN TAXSTAT = 2;
				ELSE IF CHILDREN >= 1 THEN TAXSTAT = 4;
				ELSE TAXSTAT = 1;
			ARRAY INC_BRAC(*) INCBRACKET1-INCBRACKET"||COMPRESS(MAXBRACKET)||";
			ARRAY DIV_BRAC(*) DIVBRACKET1-DIVBRACKET"||COMPRESS(MAXBRACKET)||";
			ARRAY PEN_BRAC(*) PENBRACKET1-PENBRACKET"||COMPRESS(MAXBRACKET)||";");
	IF NOT LAST.TAXSTAT THEN CALL EXECUTE("
		IF TAXSTAT = "||COMPRESS(TAXSTAT)||" THEN DO;
			IF WAGES IN("||COMPRESS(LOW)||":"||COMPRESS(HIGH)||") THEN DO;
				INC_BRAC("||COMPRESS(BRACKET)||") = (WAGES - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
				PEN_BRAC("||COMPRESS(BRACKET)||") = (PENSIONS - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
			END;
				ELSE IF WAGES GT "||COMPRESS(HIGH)||" THEN DO;
					INC_BRAC("||COMPRESS(BRACKET)||") = ("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
					PEN_BRAC("||COMPRESS(BRACKET)||") = ("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
				END;
			IF "||COMPRESS(RATE)||" IN(.00,.10,.15) THEN DIV_RATE = 0.00;
				ELSE IF "||COMPRESS(RATE)||" IN(.25,.28,.33,.35) THEN DIV_RATE = 0.15;
				ELSE IF "||COMPRESS(RATE)||" IN(.396) THEN DIV_RATE = 0.20;
			IF DIVIDEND IN("||COMPRESS(LOW)||":"||COMPRESS(HIGH)||") THEN DIV_BRAC("||COMPRESS(BRACKET)||") = (DIVIDEND - "||COMPRESS(LOW)||")*DIV_RATE;
				ELSE IF DIVIDEND GT "||COMPRESS(HIGH)||" THEN DIV_BRAC("||COMPRESS(BRACKET)||") = ("||COMPRESS(HIGH)||" - "||COMPRESS(LOW)||")*DIV_RATE;
		END;");
	IF LAST.TAXSTAT THEN CALL EXECUTE("
		IF TAXSTAT = "||COMPRESS(TAXSTAT)||" THEN DO;
			IF WAGES GE "||COMPRESS(LOW)||" THEN DO;
				INC_BRAC("||COMPRESS(BRACKET)||") = (WAGES - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
				PEN_BRAC("||COMPRESS(BRACKET)||") = (PENSIONS - "||COMPRESS(LOW)||")*"||COMPRESS(RATE)||";
			END;
			IF "||COMPRESS(RATE)||" IN(.00,.10,.15) THEN DIV_RATE = 0.00;
				ELSE IF "||COMPRESS(RATE)||" IN(.25,.28,.33,.35) THEN DIV_RATE = 0.15;
				ELSE IF "||COMPRESS(RATE)||" IN(.396) THEN DIV_RATE = 0.20;
			IF DIVIDEND GE "||COMPRESS(LOW)||" THEN DIV_BRAC("||COMPRESS(BRACKET)||") = (DIVIDEND - "||COMPRESS(LOW)||")*DIV_RATE;");
	/* Surtax for Dividend Income */
	IF LAST.TAXSTAT THEN CALL EXECUTE("
			IF DIVIDEND GE "||COMPRESS(LOW)||" THEN DIV_MC_SURTAX = (DIVIDEND - "||COMPRESS(LOW)||")*0.038;
		END;");
	/* Surtax for Wages */
	IF EOF THEN CALL EXECUTE("
		IF "||COMPRESS(YEAR)||" GE 2013 THEN DO;
			IF TAXSTAT IN(1,4) THEN DO;
				IF WAGES GE 200000 THEN WAGE_MC_SURTAX = (WAGES - 200000)*.038;
				IF PENSIONS GE 200000 THEN PENSION_MC_SURTAX = (PENSIONS - 200000)*.038;
			END;
			IF TAXSTAT IN(2) THEN DO;
				IF WAGES GE 250000 THEN WAGE_MC_SURTAX = (WAGES - 250000)*.038;
				IF PENSIONS GE 250000 THEN PENSION_MC_SURTAX = (PENSIONS - 250000)*.038;
			END;
			IF TAXSTAT IN(3) THEN DO;
				IF WAGES GE 125000 THEN WAGE_MC_SURTAX = (WAGES - 125000)*.038;
				IF PENSIONS GE 125000 THEN PENSION_MC_SURTAX = (PENSIONS - 125000)*.038;
			END;
		END;
			ELSE IF "||COMPRESS(YEAR)||" IN(1998:2012) THEN DO;
				IF TAXSTAT IN(1,4) THEN DO;
					IF WAGES GE 200000 THEN WAGE_MC_SURTAX = (WAGES - 200000)*.029;
					IF PENSIONS GE 200000 THEN PENSION_MC_SURTAX = (PENSIONS - 200000)*.029;
				END;
				IF TAXSTAT IN(2) THEN DO;
					IF WAGES GE 250000 THEN WAGE_MC_SURTAX = (WAGES - 250000)*.038;
					IF PENSIONS GE 250000 THEN PENSION_MC_SURTAX = (PENSIONS - 250000)*.029;
				END;
				IF TAXSTAT IN(3) THEN DO;
					IF WAGES GE 125000 THEN WAGE_MC_SURTAX = (WAGES - 125000)*.038;
					IF PENSIONS GE 125000 THEN PENSION_MC_SURTAX = (PENSIONS - 125000)*.029;
				END;
			END;");
	/* Bring all of the parts together, form the tax variables, and end the data step. */
	IF EOF THEN CALL EXECUTE("
		FORMAT NOM_INC_TAX NOM_DIV_TAX COMMA18.2;
		NOM_INC_TAX = MAX( SUM( OF INCBRACKET: WAGE_MC_SURTAX ),0);
		NOM_DIV_TAX = MAX( SUM( OF DIVBRACKET: DIV_MC_SURTAX ),0);
		NOM_PENSION_TAX = MAX( SUM( OF PENBRACKET: PENSION_MC_SURTAX ),0);
	RUN;");
RUN;

/* Unused - END */;
